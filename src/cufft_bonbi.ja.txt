= ボンビーFortranプログラマーのためのお手軽GPUプログラミング
== 対象とする読者と機材と数値計算プログラム
GPU (Graphics Processing Unit) による高速な数値計算が
喧伝されて数年が経つ。しかし、まだたいていの方の認識は、
GPUを使うとどうやら高速な数値計算ができるらしいが、
GPUボードはコンピューターのPCIバスに刺さっているので
そのメモリはコンピューターのメインメモリと共通ではなく、
コンピューターとGPUとの間でデータのやりとりが必要で、
プログラミングが大変そう、という程度ではないだろうか。

この記事では、上記の認識そのままにして、
とりあえずFortranだけでGPUを使う方法を解説する。
NDIVIAのGPUボードを１枚以上持つコンピューターで
数値計算を手軽に高速化することを目的とする。
高速化の対象とする数値計算プログラムは、Fortranで書かれ、
シリアル（シングルスレッド）なものかOpenMPで
並列化（マルチスレッド）されたものである。
MPIによる並列化（多ノード＝マルチプロセス）については特に触れない。
数値計算プログラムが高速フーリエ変換 (FFT) やBLASライブラリを
使っていれば簡単に高速化できる可能性は高い。なぜなら、
この記事を読むことでCUDAのcuFFTとcuBLASの関数を
Fortranから直接呼び出す方法が解るからである。
GPUについての詳細な理解とC言語での複雑なプログラミングは回避する。

GPUプログラミングの手法は進化しつつあり、OpenACCの実装や
PGI CUDA Fortranなどが開発され販売されてるが、
非常に高価であり、ボンビー（貧乏人）には敷居が高い。
そこで、この記事ではNDIVIAが無料で提供するCUDAといくつかの
FLOSS (Free/Libre andOpen Source Software) だけで
ソフトウェアライセンス料を気にせずに自由でお手軽な
GPUプログラミングを楽しむ方法を解説する。


== CUDAのインストール

== interfaceを書く
/usr/local/cuda/include/以下にインストールされているヘッダファイル (*.h) を参考に
interfaceを書く。

== 高速化の例
feram
