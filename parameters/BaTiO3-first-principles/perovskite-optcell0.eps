%!PS-Adobe-2.0
%%Title: perovskite-optcell0.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Sat Jan 24 21:37:05 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Portrait
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -60 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (perovskite-optcell0.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (西松 毅)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Jan 24 21:37:05 2009)
  /DOCINFO pdfmark
end
} ifelse
/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
currentdict /CharStrings known {
	CharStrings /Idieresis known {
		/Encoding ISOLatin1Encoding def } if
} if
currentdict end definefont
} def
/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
/Times-Roman reencodeISO def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
1080 540 M
63 0 V
3591 0 R
-63 0 V
stroke
972 540 M
[ [(Times-Roman) 180.0 0.0 true true 0 (-0.002)]
] -60.0 MRshow
1.000 UL
LTb
1080 1256 M
63 0 V
3591 0 R
-63 0 V
stroke
972 1256 M
[ [(Times-Roman) 180.0 0.0 true true 0 (0.000)]
] -60.0 MRshow
1.000 UL
LTb
1080 1972 M
63 0 V
3591 0 R
-63 0 V
stroke
972 1972 M
[ [(Times-Roman) 180.0 0.0 true true 0 (0.002)]
] -60.0 MRshow
1.000 UL
LTb
1080 2688 M
63 0 V
3591 0 R
-63 0 V
stroke
972 2688 M
[ [(Times-Roman) 180.0 0.0 true true 0 (0.004)]
] -60.0 MRshow
1.000 UL
LTb
1080 3404 M
63 0 V
3591 0 R
-63 0 V
stroke
972 3404 M
[ [(Times-Roman) 180.0 0.0 true true 0 (0.006)]
] -60.0 MRshow
1.000 UL
LTb
1080 4120 M
63 0 V
3591 0 R
-63 0 V
stroke
972 4120 M
[ [(Times-Roman) 180.0 0.0 true true 0 (0.008)]
] -60.0 MRshow
1.000 UL
LTb
1080 4836 M
63 0 V
3591 0 R
-63 0 V
stroke
972 4836 M
[ [(Times-Roman) 180.0 0.0 true true 0 (0.010)]
] -60.0 MRshow
1.000 UL
LTb
1080 5552 M
63 0 V
3591 0 R
-63 0 V
stroke
972 5552 M
[ [(Times-Roman) 180.0 0.0 true true 0 (0.012)]
] -60.0 MRshow
1.000 UL
LTb
1080 6268 M
63 0 V
3591 0 R
-63 0 V
stroke
972 6268 M
[ [(Times-Roman) 180.0 0.0 true true 0 (0.014)]
] -60.0 MRshow
1.000 UL
LTb
1080 6984 M
63 0 V
3591 0 R
-63 0 V
stroke
972 6984 M
[ [(Times-Roman) 180.0 0.0 true true 0 (0.016)]
] -60.0 MRshow
1.000 UL
LTb
1080 540 M
0 63 V
0 6381 R
0 -63 V
stroke
1080 360 M
[ [(Times-Roman) 180.0 0.0 true true 0 ( 0)]
] -60.0 MCshow
1.000 UL
LTb
2298 540 M
0 63 V
0 6381 R
0 -63 V
stroke
2298 360 M
[ [(Times-Roman) 180.0 0.0 true true 0 ( 0.05)]
] -60.0 MCshow
1.000 UL
LTb
3516 540 M
0 63 V
0 6381 R
0 -63 V
stroke
3516 360 M
[ [(Times-Roman) 180.0 0.0 true true 0 ( 0.1)]
] -60.0 MCshow
1.000 UL
LTb
4734 540 M
0 63 V
0 6381 R
0 -63 V
stroke
4734 360 M
[ [(Times-Roman) 180.0 0.0 true true 0 ( 0.15)]
] -60.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
1080 6984 N
0 -6444 V
3654 0 V
0 6444 V
-3654 0 V
Z stroke
LCb setrgbcolor
126 3762 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ /Times-Italic reencodeISO def
[(Times-Italic) 180.0 0.0 true true 0 (E)]
[(Times-Roman) 144.0 -54.0 true true 0 (tot)]
[(Times-Roman) 180.0 0.0 true true 0 ( - )]
[(Times-Italic) 180.0 0.0 true true 0 (E)]
[(Times-Roman) 144.0 -54.0 true true 0 (0)]
[(Times-Roman) 180.0 0.0 true true 0 ( [eV])]
] -42.0 MCshow
grestore
LTb
LCb setrgbcolor
2907 90 M
[ [(Times-Italic) 180.0 0.0 true true 0 (u)]
[(Times-Roman) 180.0 0.0 true true 0 ( [\305])]
] -60.0 MCshow
LTb
1.000 UP
1.000 UL
LTb
2.000 UP
1.000 UL
LT0
LTb
2808 6831 M
[ [(Times-Roman) 180.0 0.0 true true 0 ([001])]
] -60.0 MRshow
LT0
1080 1256 Pls
1176 1254 Pls
1271 1248 Pls
1367 1238 Pls
1462 1225 Pls
1558 1210 Pls
1653 1194 Pls
1749 1178 Pls
1845 1164 Pls
1940 1153 Pls
2036 1147 Pls
2131 1148 Pls
2227 1159 Pls
2322 1181 Pls
2418 1217 Pls
2514 1270 Pls
2609 1340 Pls
2705 1432 Pls
2800 1547 Pls
2896 1688 Pls
2991 1856 Pls
3163 6831 Pls
2.000 UL
LT0
LTb
2808 6651 M
[ [(Times-Roman) 180.0 0.0 true true 0 (4th order func.)]
] -60.0 MRshow
LT0
2916 6651 M
495 0 V
1080 1256 M
29 0 V
30 -1 V
29 -1 V
30 -1 V
29 -1 V
30 -2 V
29 -3 V
29 -2 V
30 -3 V
29 -3 V
30 -3 V
29 -4 V
29 -4 V
30 -4 V
29 -4 V
30 -5 V
29 -4 V
30 -5 V
29 -4 V
29 -5 V
30 -5 V
29 -4 V
30 -5 V
29 -4 V
30 -5 V
29 -4 V
29 -3 V
30 -4 V
29 -3 V
30 -3 V
29 -2 V
30 -1 V
29 -2 V
29 0 V
30 0 V
29 1 V
30 2 V
29 3 V
29 4 V
30 5 V
29 5 V
30 8 V
29 8 V
30 10 V
29 11 V
29 12 V
30 15 V
29 15 V
30 18 V
29 20 V
30 21 V
29 24 V
29 25 V
30 28 V
29 30 V
30 33 V
29 35 V
30 38 V
29 40 V
29 44 V
30 46 V
29 49 V
30 53 V
29 56 V
29 59 V
30 63 V
29 66 V
30 70 V
29 74 V
30 78 V
29 83 V
29 86 V
30 91 V
29 96 V
30 100 V
29 105 V
30 110 V
29 115 V
29 120 V
30 126 V
29 131 V
30 137 V
29 143 V
30 148 V
29 155 V
29 161 V
30 168 V
29 174 V
30 181 V
29 188 V
29 195 V
30 202 V
29 209 V
30 218 V
29 225 V
30 233 V
29 241 V
29 249 V
30 258 V
2.000 UP
stroke
1.000 UL
LT1
LTb
2808 6471 M
[ [(Times-Roman) 180.0 0.0 true true 0 ([110])]
] -60.0 MRshow
LT1
1080 1256 Crs
1226 1251 Crs
1371 1237 Crs
1517 1215 Crs
1663 1187 Crs
1808 1155 Crs
1954 1124 Crs
2100 1098 Crs
2245 1081 Crs
2391 1079 Crs
2536 1097 Crs
2682 1143 Crs
2828 1221 Crs
2973 1339 Crs
3119 1504 Crs
3265 1721 Crs
3410 1998 Crs
3556 2340 Crs
3702 2753 Crs
3847 3243 Crs
3993 3815 Crs
3163 6471 Crs
2.000 UL
LT1
LTb
2808 6291 M
[ [(Times-Roman) 180.0 0.0 true true 0 (\()]
/Symbol reencodeISO def
[(Symbol) 180.0 0.0 true true 0 (a)]
[(Times-Roman) 180.0 0.0 true true 0 (+)]
[(Symbol) 180.0 0.0 true true 0 (g)]
[(Times-Roman) 180.0 0.0 true true 0 (/4\))]
[(Times-Italic) 180.0 0.0 true true 0 (u)]
[(Times-Roman) 144.0 90.0 true true 0 (4)]
[(Times-Roman) 180.0 0.0 true true 0 (+)]
[(Symbol) 180.0 0.0 true true 0 (k)]
[(Times-Italic) 180.0 0.0 true true 0 (u)]
[(Times-Roman) 144.0 90.0 true true 0 (2)]
] -78.0 MRshow
LT1
2916 6291 M
495 0 V
1080 1256 M
29 0 V
30 -1 V
29 -1 V
30 -1 V
29 -2 V
30 -2 V
29 -2 V
29 -3 V
30 -3 V
29 -3 V
30 -4 V
29 -4 V
29 -4 V
30 -4 V
29 -5 V
30 -5 V
29 -5 V
30 -6 V
29 -5 V
29 -6 V
30 -6 V
29 -6 V
30 -6 V
29 -6 V
30 -6 V
29 -6 V
29 -7 V
30 -6 V
29 -6 V
30 -5 V
29 -6 V
30 -6 V
29 -5 V
29 -5 V
30 -4 V
29 -5 V
30 -4 V
29 -3 V
29 -3 V
30 -3 V
29 -2 V
30 -1 V
29 0 V
30 0 V
29 1 V
29 1 V
30 3 V
29 4 V
30 4 V
29 6 V
30 6 V
29 8 V
29 9 V
30 11 V
29 11 V
30 13 V
29 15 V
30 16 V
29 18 V
29 19 V
30 22 V
29 23 V
30 25 V
29 27 V
29 29 V
30 31 V
29 33 V
30 35 V
29 38 V
30 41 V
29 43 V
29 45 V
30 48 V
29 51 V
30 54 V
29 57 V
30 60 V
29 63 V
29 66 V
30 69 V
29 73 V
30 77 V
29 80 V
30 83 V
29 88 V
29 91 V
30 96 V
29 99 V
30 104 V
29 108 V
29 112 V
30 117 V
29 122 V
30 126 V
29 131 V
30 136 V
29 141 V
29 146 V
30 152 V
2.000 UP
stroke
1.000 UL
LT2
LTb
2808 6111 M
[ [(Times-Roman) 180.0 0.0 true true 0 ([111])]
] -60.0 MRshow
LT2
1080 1256 Star
1192 1253 Star
1303 1245 Star
1415 1231 Star
1527 1213 Star
1638 1190 Star
1750 1165 Star
1862 1138 Star
1973 1110 Star
2085 1084 Star
2197 1061 Star
2308 1042 Star
2420 1031 Star
2532 1028 Star
2643 1038 Star
2755 1061 Star
2867 1101 Star
2978 1160 Star
3090 1240 Star
3202 1346 Star
3313 1479 Star
3163 6111 Star
2.000 UL
LT2
LTb
2808 5931 M
[ [(Times-Roman) 180.0 0.0 true true 0 (4th order func.)]
] -60.0 MRshow
LT2
2916 5931 M
495 0 V
1080 1256 M
29 0 V
30 -1 V
29 -1 V
30 -1 V
29 -2 V
30 -2 V
29 -2 V
29 -3 V
30 -3 V
29 -4 V
30 -4 V
29 -4 V
29 -4 V
30 -5 V
29 -5 V
30 -5 V
29 -6 V
30 -6 V
29 -6 V
29 -6 V
30 -6 V
29 -7 V
30 -7 V
29 -7 V
30 -7 V
29 -7 V
29 -7 V
30 -7 V
29 -7 V
30 -7 V
29 -7 V
30 -7 V
29 -7 V
29 -7 V
30 -7 V
29 -6 V
30 -6 V
29 -6 V
29 -6 V
30 -5 V
29 -5 V
30 -4 V
29 -4 V
30 -4 V
29 -2 V
29 -3 V
30 -1 V
29 -1 V
30 -1 V
29 1 V
30 1 V
29 3 V
29 3 V
30 4 V
29 5 V
30 6 V
29 7 V
30 9 V
29 10 V
29 11 V
30 12 V
29 14 V
30 15 V
29 17 V
29 18 V
30 20 V
29 22 V
30 23 V
29 26 V
30 27 V
29 29 V
29 31 V
30 34 V
29 35 V
30 38 V
29 40 V
30 42 V
29 45 V
29 48 V
30 50 V
29 53 V
30 55 V
29 59 V
30 61 V
29 64 V
29 68 V
30 70 V
29 74 V
30 77 V
29 81 V
29 84 V
30 88 V
29 91 V
30 96 V
29 99 V
30 103 V
29 107 V
29 111 V
30 115 V
stroke
1.000 UL
LTb
1080 6984 N
0 -6444 V
3654 0 V
0 6444 V
-3654 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Times-Italic Times-Roman
%%Pages: 1
