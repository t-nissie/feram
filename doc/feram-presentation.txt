=begin
= Introduction of feram
Takeshi Nishimatsu

== What is feram?
feram is a FAST molecular dynamics (MD) simulator for bulk and thin-film ferroelectrics and relaxors.

figures/phase.jpg Cooling and heating simulation of BaTiO$_3$. Horizontal axis is strain. Difference between first- and second order transition is clear.


== Technical features and keywords
 * Fast
   * FFTW library version 3  http://www.fftw.org/
   * Parallelized with OpenMP
   * gfortran on x86_64 (ifort, g95, pgf95)
   * HITACHI SR11000 Super Technical Server
 * Object oriented programming (OOP) in Fortran 2003
 * GNU autotools  http://www.gnu.org/software/autoconf/
 * Free software (GPLv3) http://loto.sf.net/feram/
 * Subversion repository at https://loto.svn.sf.net/svnroot/loto/feram/

== Features and keywords in pysics
 * Molecular dynamics (MD) simulation of first-principles-based effective Hamiltonian
 * Ferroelectrics
 * Relaxor
 * Phase transition
 * Thin film
 * Electrodes
 * Capacitor
 * Nose-Poincare thermostat
 * Optical phonon
 * Evaluate forces in reciprocal-space; k-locality of the force matrix
 * Coarse-graining; reduction of the number of degree of freedom


== Parameters (input file)
 #--- Method, Temperature, and mass ---------------
 method = 'md'
  # 'md' - Molecular Dynamics with Nose-Poincare thermostat (Canonical ensemble)
  # 'lf' - Leap Frog (Microcanonical ensemble)
  # 'mc' - Monte Carlo
 GPa = -5.0
 kelvin_start = 350
 kelvin_goal  =  50
 kelvin_step  =  -5
 mass_amu = 39.0
 Q_Nose = 1.0

 #--- System geometry -----------------------------
 bulk_or_film = 'bulk'
 L = 32 32 32
 a0 =  3.94         latice constant a0 [Angstrom]

 #--- Time step -----------------------------------
 dt = 0.002 [ps]
 n_thermalize =  40000
 n_average    =  10000
 n_coord_freq =   5000     Write a snapshot to the disk evry 5000 steps

 #--- On-site (Polynomial of order 4) -------------
 P_kappa2 =    5.502  [eV/Angstrom^2] # P_4(u) = kappa2*u^2 + alpha*u^4
 P_alpha  =  110.4    [eV/Angstrom^4] #  + gamma*(u_y*u_z+u_z*u_x+u_x*u_y),
 P_gamma  = -163.1    [eV/Angstrom^4] # where u^2 = u_x^2 + u_y^2 + u_z^2

 #--- Inter-site ----------------------------------
 j = -2.648 3.894 0.898 -0.789 0.562 0.358 0.179    j(i) [eV/Angstrom^2]

 #--- Elastic Constants ---------------------------
 B11 = 126.
 B12 =  44.9
 B44 =  50.3  [eV]

 #--- Elastic Coupling ----------------------------
 B1xx = -211.   [eV/Angstrom^2]
 B1yy =  -19.3  [eV/Angstrom^2]
 B4yz =   -7.75 [eV/Angstrom^2]

 #--- Dipole --------------------------------------
 init_dipo_avg = 0.00 0.00 0.00   [Angstrom]  # Average   of initial dipole displacements
 init_dipo_dev = 0.02 0.02 0.02   [Angstrom]  # Deviation of initial dipole displacements
 Z_star       = 9.956
 epsilon_inf   = 5.24

== ***************************************************************************

== What is relaxor?

== Frequency dependence of susceptibility of relaxor
The purpose of this study is to simulate this Frequency dependence.


== Crystal structures of PSN

== Chemically ordered and disordered regions of relaxors

== susceptibility

== Estimation of computational time
32x32x32 unitcells, $\Delta t = 2$ fs, [one dual core 1.8GHz x86_64] and [SR11000 1 node = 16 cores]

1THz, T=1ps,                500 steps, 55 sec, SR11000 8.4 sec.

1GHz, T=1ns,            500,000 steps,       , SR11000 140 min.

1MHz, T=1$\mu$s,    500,000,000 steps,       , SR11000 100 days

1kHz, T=1ms,    500,000,000,000 steps,       , SR11000  30 years

1Hz,  T=1s, 500,000,000,000,000 steps,       , SR11000 30,000 years



=end
#
# for ulmul.rb
#
require 'ulmul'
u=Ulmul.new()
u.subs_rules << [/(\S*\/?\.jpg)\s*(.*)$/, '<div class="figure">
  <img src="\1" alt="\1" />
  <div class="caption">
    \2
  </div>
</div>']

u.parse(ARGF)
puts u.html(["feram-presentation.css"],["slidy.js"],"Takeshi Nishimatsu")

# Local variables:
#   mode: RD
#   compile-command: "ruby -I .. feram-presentation.txt feram-presentation.txt > feram-presentation.xhtml"
# End:
