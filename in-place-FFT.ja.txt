= 0.19.03 r1346 2012-07-13 の段階でin-placeのFFTが使えるかどうか検討
coord_module.F の中のplansは次の７つ:
 plans_dipoR2C(3)     dipoR → dipoK
 plans_didiR2C(6)     didiR → didiK
 plans_inhoK2R(6)     inhoK → inhoR
 plans_dVdacK2R(3)    dVdacK → dVdacR
 plans_acouR2C(3)     acouR → acouK      plans_dipoR2Cと共用できるけど。
 plans_acouC2R(3)     acouK → acouR
 plans_dipoT2dVddi(3) dipoT → dVddi

rank remapping or array dimension changing を使うと奇麗に見やすく書けると思う
  r(0:2*(Lx/2+1)-1, 0:Ly-1, 0:local_Lz-1) => r_tmp
  c(0:Lx/2,         0:Lz-1, 0:local_Ly-1) => c_tmp

== dipoR → dipoK
直後にdipoRを使うのでin-placeにはできない．

== didiR → didiK
dipoFFT.Fで両方が作られる．
その直後にdVddi-dipole-dipole.FでdidiKが，
dVddi-unharmonic.FでdidiRが使われるのでin-placeにはできない．

== inhoK → inhoR
in-place done.
両方とも dVddi_inho_coupling.F 内でしか使われないのでin-placeにできる．
r2480, r2483 (and r2490) の coord_module.F と dVddi_inho_coupling.F と
に対する変更でin-placeにできたが、xlf version 14, 15でICEになるので
r2479の状態（planの名前をわかりやすく変えた直後の状態）に戻した (2015-05-12)。
See IV73550 INTERNAL COMPILER ERROR WITH C_PTR IN DERIVED TYPE DEFINITION
http://www-01.ibm.com/support/docview.wss?crawler=1&uid=swg1IV73550
なお，当該C_PTRを構造体の後ろの方に置けばこのICEは回避できる．
一方，Core i7でFFTW_MEASUREだと遅いin-place FFTのコードレットが選ばれてしまう．
FFTW_PATIENTでは十分速いコードレットが選ばれるが，選ぶのにやたら時間がかかる場合がある．

== dipoT → dVddi
dipoTがdVddi-dipole-dipole.F内で一時的に使われるだけなので
in-placeにできる．最も簡単そう．

次の手順で書き換える:
 * timing1
 * verbose = 2 でdebug1
 * dVddiの関連するすべてのループに ix, iy のインデックスを追加.
 * timing2
 * verbose = 2 でdebug2
 * coord_module.F, dVddi-dipole-dipole.F 書き換え.
 * timing3
 * verbose = 2 でdebug3
