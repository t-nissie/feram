2007-12-15  Takeshi Nishimatsu  <takeshi@lotus>

	* configure.ac: version 0.04.01, rev 139

2007-10-06  Takeshi Nishimatsu  <takeshi@physics.rutgers.edu>

	* configure.ac: version 0.03.06, rev 8?, add doc/

2007-09-18  Takeshi Nishimatsu  <takeshi@physics.rutgers.edu>

	* configure.ac: version 0.03.05, rev 49

2007-08-10  NISHIMATSU Takeshi  <takeshi@physics.rutgers.edu>

	* src/param_module.F (read_Param):
	    p%n_coord_freq           = huge(1)   ! maximum integer

	* version 0.03.04

2007-08-08  NISHIMATSU Takeshi  <takeshi@physics.rutgers.edu>

	* README: n_external_E_switch_on, external_E_field, external_E_field_frequency

	* version 0.03.01

2007-08-07  NISHIMATSU Takeshi  <takeshi@physics.rutgers.edu>

	* src/param_module.F (Param_module): real*8 external_E_field(3)

	* version 0.03.00

2007-07-19  NISHIMATSU Takeshi  <takeshi@physics.rutgers.edu>

	* README: How to write an input file

	* version 0.02.46

2007-07-10  NISHIMATSU Takeshi  <takeshi@physics.rutgers.edu>

	* src/nose-poincare.F (nose_poincare): defect_u

	* src/param_module.F (Param_module): defect_u

	* src/initialize-dipoR.F (initialize_dipoR): defect_u

	* version 0.02.45

2007-07-05  NISHIMATSU Takeshi  <takeshi@physics.rutgers.edu>

	* src/initialize-dipoR.F (initialize_dipoR): Some write statements were discarded.
	call msg(6, __FILE__, __LINE__, 'FILE: ', 'restart.coord was NOT found.')

	* version 0.02.44

2007-06-27  NISHIMATSU Takeshi  <takeshi@physics.rutgers.edu>

	* src/coord_module.F (write_system):
             write(UNIT_SYSTEM,'(i4,2i5,3f10.6,6e13.5)') ix, iy, iz, &
                  & (c%dipoR(ix,iy,iz,i)         ,i=1,3),&
                  & (c%dipoP(ix,iy,iz,i)/c%s_Nose,i=1,3),&
                  & (c%dVddi(ix,iy,iz,i)         ,i=1,3)

	* version 0.02.43

2007-06-20  NISHIMATSU Takeshi  <takeshi@physics.rutgers.edu>

	* src/param_module.F (read_Param): select case(TRIM(name))

	* version 0.02.41

2007-06-09  NISHIMATSU Takeshi  <takeshi@physics.rutgers.edu>

	* src/initialize-dipoR.F (initialize_dipoR):
	open(unit=UNIT_SYSTEM, file='restart.coord', status='old', action='read', iostat=ios)

	* version 0.02.39

2007-06-06  NISHIMATSU Takeshi  <takeshi@physics.rutgers.edu>

	* libbuilt_in_fft/generatefft.rb (fft_generator): New directory.

	* version 0.02.35

2007-05-22  NISHIMATSU Takeshi  <takeshi@physics.rutgers.edu>

	* configure.ac: Do NOT use MPI any more.

	* version 0.02.30

2007-05-21  NISHIMATSU Takeshi  <takeshi@physics.rutgers.edu>

	* src/coord_module.F (Coord_module): no need __GFORTRAN (gcc-4.2.0 or higer)

2007-05-20  NISHIMATSU Takeshi  <takeshi@physics.rutgers.edu>

	* src/optimize-inho-strain.F (optimize_inho_strain): OpenMP

	* src/fft.F: OpenMP

	* version 0.02.28

2007-05-09  NISHIMATSU Takeshi  <takeshi@physics.rutgers.edu>

	* src/optimize-inho-strain.F (optimize_inho_strain):
	Back to
	complex*16, allocatable :: acouK(:,:,:,:)
	real*8,     allocatable :: inhoR(:,:,:,:)
	complex*16, allocatable :: inhoK(:,:,:,:)
	Do not use stack!

	* configure.ac: AC_CHECK_LIB(matmpp_sc, HZFT7M,, AC_MSG_ERROR([You need MATRIX/MPP (matmpp) library. See config.log.])), matmpp_sc

2007-05-07  NISHIMATSU Takeshi  <takeshi@physics.rutgers.edu>

	* src/fft.F (fft_c2r): parallelized!

	* src/fft.F (fft_r2c): parallelized!

	* src/energy_module.F: subroutine inhomogeneous_strain_energy()
	is moved from src/optimize-inho-strain.F.

	* src/energy_module.F: subroutine inhomogeneous_coupling_energy()
	is moved from src/optimize-inho-strain.F.

	* src/optimize-inho-strain.F (optimize_inho_strain): 
	The optimize inhomogeneous strain loop is parallelized!

2007-05-05  NISHIMATSU Takeshi  <takeshi@physics.rutgers.edu>

	* src/coord_module.F (Coord_module): 
	#  ifdef __SR11000
	#    define allocated associated  <=== for SR11000

2007-05-04  NISHIMATSU Takeshi  <takeshi@physics.rutgers.edu>

	* src/average_module.F (divide_and_write_Average): 
	write(UNIT_AVG,"(f6.1,' avg%total_energy'    ,1e13.5)") kelvin, avg%total_energy

	* version 0.02.20

2007-05-03  NISHIMATSU Takeshi  <takeshi@physics.rutgers.edu>

	* examples/Makefile.in:
	FC = @FC@
	ifeq "$(FC)" "mpif90"
	  MPIRUN = mpirun -n 3
	else
	  MPIRUN =
	endif

	* version 0.02.18

2007-05-02  NISHIMATSU Takeshi  <takeshi@physics.rutgers.edu>

	* src/define.h (UNIT_AVG): #define UNIT_AVG 10

	* src/molecular-dynamics.F (molecular_dynamics):
	  open(unit=UNIT_AVG,file=fn_avg, status='REPLACE')
	     call divide_and_write_Average(p,avg,kelvin,UNIT_AVG)
	  close(UNIT_AVG)

	* version 0.02.17

2007-04-22  NISHIMATSU Takeshi  <takeshi@physics.rutgers.edu>

	* src/mpi_sp_module.F (mpi_sp_module): #ifdef MPI_SP_MODULE

	* src/feram.F (feram): get_command_argument(i,p%filename)

	* version 0.02.16

2007-04-19  NISHIMATSU Takeshi  <takeshi@physics.rutgers.edu>

	* src/msg.F (msg): __MPI__ msg.f -> msg.F

	* configure.ac: -D__MPI__

	* version 0.02.15

2007-04-16  NISHIMATSU Takeshi  <takeshi@physics.rutgers.edu>

	* configure.ac: 
	FCFLAGS_PRESERVE=$FCFLAGS
	AC_LANG(Fortran)
	AC_PROG_FC(g95 ifort pgf95 xf90)
	FCFLAGS=$FCFLAGS_PRESERVE

	* version 0.02.13

2007-04-11  NISHIMATSU Takeshi  <takeshi@physics.rutgers.edu>

	* src/coord_module.F (Coord_module): #ifdef __SR11000

	* src/fft.F: #ifdef __SR11000

	* version 0.02.06

2007-03-27  NISHIMATSU Takeshi  <takeshi@physics.rutgers.edu>

	* src/dipole-dipole-long-range.F (dipole_dipole_long_range):
	Auto determination of kappa, a arbitrary constant for Ewald sum.

	* examples/Makefile.in: New file.

	* version 0.02.05

2007-03-26  NISHIMATSU Takeshi  <takeshi@physics.rutgers.edu>

	* Introduce autotools.

	* version 0.02.04

2006-06-12  Takeshi Nishimatsu  <takeshi@rutgers.edu>

	* src/cholesky_z.f: Using Cholesky decomposition, cholesky_z.f
	solve a linear equation Ax=b, (_Z -> _z).

	* version 2.03

2006-03-24  Takeshi Nishimatsu  <takeshi@rutgers.edu>

	* src/plot.gp: xlabel, ylabel, xtics

	* version 2.02

2006-02-10  NISHIMATSU Takeshi  <t-nissie@imr.edu>

	* src/elastic.F (elastic): inhomo_K, inhomo_coup2_K ak(i) -> k(i)

	* src/optimize-inho-strain.F (optimize_inho_strain): ak(i) -> k(i)

	* version 2.00

2006-02-01  NISHIMATSU Takeshi  <t-nissie@imr.edu>

	* src/cross-section-q.sh: [max_z] as $6

2006-01-31  NISHIMATSU Takeshi  <t-nissie@imr.edu>

	* src/slicer.rb: slices coord file

2006-01-16  NISHIMATSU Takeshi  <t-nissie@imr.edu>

	* src/cross-section-q.sh: Caution: Do NOT rename this file!

2006-01-08  NISHIMATSU Takeshi  <t-nissie@imr.edu>

	* src/Makefile (FFLAGS): add -pipe to FFLAGS for g95

	* version 1.07

2005-12-13  NISHIMATSU Takeshi  <t-nissie@imr.edu>

	* src/dVddi-dipole-dipole.F (dVddi_dipole_dipole):
	Change the order of loops alpha and beta. It does not improve the speed.
	--- feram-1.05/src/dVddi-dipole-dipole.F	Tue Nov 15 16:39:02 2005
	+++ feram-1.06/src/dVddi-dipole-dipole.F	Thu Nov 24 17:25:31 2005
	@@ -20,8 +20,8 @@
	   allocate(dipoT(0:p%Lx/2, 0:p%Ly-1, 0:p%Lz-1, 3)) !"/2" See fft.F!
	   ! calc dVddi
	   dipoT(:,:,:,:) = (0.0d0, 0.0d0)
	-  do alpha = 1,3
	      do beta = 1,3
	+     do alpha = 1,3
	         do iz=0, p%Lz-1
	            do iy=0, p%Ly-1
	               do ix=0, p%Lx/2

	* src/cross-section-q.sh: Add explanations of arguments.

	* version 1.06

2005-11-24  NISHIMATSU Takeshi  <t-nissie@imr.edu>

	* src/optimize-homo-strain.F (optimize_homo_strain): use cholesky_d()
	instead of DPOSV() from LAPACK.

	* Makefile: cholesky_d.f will be automatically generated from cholesky_z.f.

	* src/cholesky_z.f (cholesky_z):
	Using Cholesky decomposition, cholesky-Z.f solve a linear equation Ax=b,
	where A is a n by n positive definite real symmetric matrix, x and b are
	complex*16 vectors length n.

	* version 1.05

2005-11-22  NISHIMATSU Takeshi  <t-nissie@imr.edu>

	* src/optimize-inho-strain.F: !POPTION PARALLEL

	* src/Makefile (SR8000 1node):
	FFLAGS=-free -64 -Oss -pvec -parallel=4 -uinline=2 \
	-uinlinename=decay-functions.f:B_decay:C_decay:Crr \
	-uinlinename=solve3x3.f:solve3x3 \
	-autoinline=2 -mathinline -COMOUT -exclamation=option

	* src/decay-functions.f (B_decay): !OPTION FORM(FREE)

	* version 1.02

2005-11-17  NISHIMATSU Takeshi  <t-nissie@imr.edu>

	* src/define-with-comments.h: discard directives for rand() or drand().

	* src/normal.F (std_normal_dist): real*8 x(2), call random_number(x)

	* version 1.00

2005-11-16  NISHIMATSU Takeshi  <t-nissie@imr.edu>

	* src/fft.F: SR8000, OSF1: subroutine fft_r2c(p,r,c,max_alpha)
	                           subroutine fft_c2r(p,c,r,max_alpha)

	* version 0.99

2005-11-15  NISHIMATSU Takeshi  <t-nissie@imr.edu>

	* src/fft.F: SR8000

2005-11-14  NISHIMATSU Takeshi  <t-nissie@imr.edu>

	* src/normal.F (normal_dist): SR8000 O.K.

2005-11-11  NISHIMATSU Takeshi  <t-nissie@imr.edu>

	* version 0.98

2005-10-28  NISHIMATSU Takeshi  <t-nissie@imr.edu>

	* src/Makefile: IBM AIX (You have to use the LAPACK library which is
	compiled by yourself. LAPACK subroutines in ESSL are buggy.)

	* src/initialize-dipoR.F: e%H_Nose_Poincare = 0.0d0

	* version 0.97

2005-10-14  NISHIMATSU Takeshi  <t-nissie@imr.edu>

	* src/mirror.F (mirror): if (p%gap.eq.0) then

2005-10-13  NISHIMATSU Takeshi  <t-nissie@imr.edu>

	* src/bulk-16x16x16-test.in: 
	 39.0        mass_dipo [amu], but to be changed into [eV Angstrom^-2 ps^2] in feram

	* version 0.96

2005-10-05  NISHIMATSU Takeshi  <t-nissie@imr.edu>

	* src/average.F (add_to_Average): 
	strain_tmp(:) = c%strain(:)
	call quicksort(strain_tmp,1,3)
	call quicksort(strain_tmp,4,6)

	* src/quicksort.f (quicksort): 

	* version 0.94

2005-09-28  NISHIMATSU Takeshi  <t-nissie@imr.edu>

	* src/cross-section-q.sh (LV,LH): ratio

2005-09-26  NISHIMATSU Takeshi  <t-nissie@imr.edu>

	* src/cross-section-q.sh: constatn x, y, and z OK!

	* src/optimize-homo-strain.F (optimize_homo_strain): pressure,
	epitaxial thin film

	* src/param.F (read_Param): GPa, pressure

	* src/molecular-dynamics.F (molecular_dynamics): cooling and heating

	* src/plot.gp (max_energy): eta_1 -> e_xx

	* version 0.90

2005-09-14  NISHIMATSU Takeshi  <t-nissie@imr.edu>

	* src/nose-poincare.F (nose_poincare): Now equations are completely same as
	eqn. (35) in Stephen D. Bond, Benedict J. Leimkuhler and Brian B. Laird:
	J. Comput. Phys. Vol.151 p.114 (1999)

	* version 0.83

	* src/nose-poincare.F (nose_poincare): p%dt/2 -> p%dt_2

	* version 0.82

	* src/coord.F (Coord_module): change names of variables!!!!!

	* version 0.81

	* src/param.F (Param_module):
	p%integer n_coord_freq --- frequency for writing out the coordinates

2005-09-13  NISHIMATSU Takeshi  <t-nissie@imr.edu>

	* src/print-eigenvalues.F (print_eigenvalues_sub): last_ix must have save-attribute.

	* version 0.80

	* src/nose-poincare.F (nose_poincare): 
	if (p%bulk_or_film.eq.'film') then
	   call mirror(p, c%dipoR)
	end if

	* src/cross-section-q.sh: Very excellent shell script, isn't it!
	Usage: ./cross-section-X.sh coord-file [FACTOR] [CONST_X]   (X=q, p, pdot)

	* version 0.79

2005-09-12  NISHIMATSU Takeshi  <t-nissie@imr.edu>

	* src/average.F (divide_and_write_Average):

	* version 0.78

2005-09-11  NISHIMATSU Takeshi  <t-nissie@imr.edu>

	* src/molecular-dynamics.F (molecular_dynamics): 
	call msg_ez(6,'END of ITERATIONS ---------------------------------------------------')
	write(message,"('avg_strain',6e13.5)") avg_strain(:)/p%n_average

	* src/temperature.sh: automatic temperature scanner

	* version 0.77

	* src/nose-poincare.F (nose_poincare):
	Some call msg(6, __FILE__, __LINE__, ...) are commented out.

2005-09-10  NISHIMATSU Takeshi  <t-nissie@imr.edu>

	* src/molecular-dynamics.F (molecular_dynamics):
	change output format for strain as
	write(message,"('strain',6e13.5)") c%strain(:)

	* src/nose-poincare.F (nose_poincare): Now Nose-Poincare method is ready.

	* version 0.76

2005-09-08  NISHIMATSU Takeshi  <t-nissie@imr.edu>

	* src/nose-poincare.F (nose_poincare): Nose-Poincare thermostat is implemented here.
	This subroutine is called from molecular-dynamics.F instead of leapfrog().

	* src/energy.F (write_Energy): divide energies by p%N here. not in each subroutine.

	* version 0.72

	* src/energy.F (write_Energy): 
	e%dipo_kinetic will be calculated in initializ-dipoR.F and leapfrog.F. NOT here.

	* version 0.71

2005-08-31  NISHIMATSU Takeshi  <t-nissie@imr.tohoku.ac.jp>

	* src/optimize-inho-strain.F (optimize_inho_strain): 
	acouK -> inhoK -FFT-> inhoR (inho. strain in real space), then
	inhoR -> inhomogeneous coupling part of dipoA
	Now, total energy is conserving!

	* src/coord.F: We do not need acouR???

	* version 0.69

2005-08-30  NISHIMATSU Takeshi  <t-nissie@imr.tohoku.ac.jp>

	* src/optimize-inho-strain.F (optimize_inho_strain):
	Calculation of inhomogeneous strain coupling part of dipoA
	does not work properly. Do it in real space in next version.

	* version 0.68

2005-08-29  NISHIMATSU Takeshi  <t-nissie@imr.tohoku.ac.jp>

	* src/optimize-inho-strain.F (optimize_inho_strain): 

	* version 0.66: coord.F has dipoK and didiK.

	* src/optimize-strains.F (optimize_strains):
	compute inhomogeneous strain energy

	* version 0.65

2005-08-28  NISHIMATSU Takeshi  <t-nissie@imr.tohoku.ac.jp>

	* initialize-dipoR.F, src/leapfrog.F: Order of calling subs changed as:
	call dipoA_dipole_dipole(p,c,e)
	call dipo2didi(p,c)
	call dipoA_unharmonic(p,c,e)
	call optimize_strains(p,c,e)

	* src/dipoA-homo-coupling.F: renamed from coupling.F

	* src/dipoA-unharmonic.F: renamed from unharmonic.F

	* src/dipoA-dipole-dipole.F: renamed from calc-dipoA.F

	* version 0.64

2005-08-27  NISHIMATSU Takeshi  <t-nissie@imr.tohoku.ac.jp>

	* src/elastic.F (elastic): removed:
        if (ix.eq.0 .and. iy.eq.0 .and. iz.eq.0) then
           c%inhomogeneous_K(ix,iy,iz, alpha,beta) = 0.0d0
        else
	end if
	(elastic): inhomogeneous O.K.?

	* version 0.63

2005-08-25  NISHIMATSU Takeshi  <t-nissie@imr.edu>

	* src/dipole-dipole.gp: Unit for *.energy.ps: eV Angstrom^-2 unit-call^-1. 

	* src/dipole-dipole-long-range.F (dipole_dipole_long_range): 
	Return potential matrix in eV Angstrom^-2 unit-call^-1.

	* src/dipole-dipole.F (dipole_dipole):
	Output potential matrix in Angstrom^-2 unit-call^-1.
	Write dipole-dipole-short.dat also.
	Divide c%dipoP(:,:,:,:,:) by  p%mass_dipo at last.

	* version 0.62

	* src/plot-potential-surface/plot.gp: can compare with
	R. D. King-Smith and David Vanderbilt: PRB Vol.49 p.5828 (1994)

	* version 0.61

2005-08-23  NISHIMATSU Takeshi  <t-nissie@imr.edu>

	* src/dipole-dipole-short-range.F (dipole_dipole_short_range):
	   do alpha = 1, 3
	-     TMPreal(0, 0, 0, alpha, alpha) = p%P_kappa2
	+     TMPreal(0, 0, 0, alpha, alpha) = p%P_kappa2 * 2
	   end do

	* src/coupling.F (coupling): vibrate O.K.! called from calc-dipoA.F

	* src/calc-dipoA.F (calc_dipoA): Stay in
	e%dipole_dipole = e%dipole_dipole +
	dble( conjg(dipoK(k,alpha)) * dipoP(k,alpha,beta) * dipoK(k,beta) )

	* version 0.60

2005-08-10  NISHIMATSU Takeshi  <t-nissie@imr.edu>

	* src/tee.gp: plot energies.

	* src/energy.F (write_Energy):

	* src/leapfrog.F (leapfrog):

	* version 0.53

2005-08-10  NISHIMATSU Takeshi  <t-nissie@imr.edu>

	* src/calc-dipoA.F (calc_dipoA): evaluate e%dipole_dipole here.
	Now energy is conserving if B11, B12, B44, B1xx, B1yy, B4yz are equal zero.
	Force from dipole--homogeneous strain coupling should be calculated in this
	subroutine.

	* version 0.52

2005-08-09  NISHIMATSU Takeshi  <t-nissie@imr.edu>

	* src/energy.F (write_Energy): 

	* version 0.51

2005-08-08  NISHIMATSU Takeshi  <t-nissie@imr.edu>

	* src/bulk-16x16x16-test.in: Add units.
	!--- Elastic Constants ---------------------------
	   115.  40.   46.                    B11, B12, B44 [eV]

	* src/elastic.F (elastic): Add *p%N as c%homogeneous(1,1) = p%B11*p%N

	* src/coord.F, src/elastic.F: remove B_inv(6,6).

	* version 0.50

2005-08-07  NISHIMATSU Takeshi  <t-nissie@imr.edu>

	* src/Makefile (version.h):

	* src/feran.F: use version.h.

	* src/elastic.F (elastic): 

	* version 0.49

2005-08-06  NISHIMATSU Takeshi  <t-nissie@imr.tohoku.ac.jp>

	* src/leapfrog.f (leapfrog): remove acouV, strnV 

	* src/optimize-strains.F:

	* version 0.47

2005-08-05  NISHIMATSU Takeshi  <t-nissie@imr.edu>

	* src/fft.F (fft_r2c_3x3upper(p,r,c,hermitian)): for FFT of potentials and didiR

	* src/dipoR2didiR.f (dipoR2didiR): 

	* version 0.44

2005-08-04  NISHIMATSU Takeshi  <t-nissie@imr.edu>

	* src/eval.F (eval):   call non_quadratic_force(p,c)

	* src/non-quadratic.f (non_quadratic_force): 

	* version 0.43

2005-08-01  NISHIMATSU Takeshi  <t-nissie@imr.edu>

	* src/msg.f (msg, msg_ez): write message

	* version 0.42

2005-07-31  NISHIMATSU Takeshi  <t-nissie@imr.tohoku.ac.jp>

	* src/param.F (write_Param):
	open(unit=UNIT_SYSTEM,file='param.gp')

	* src/dipole-dipole.gp: draws four PostScript files
	dipole-dipole-long+short.energy.ps
	dipole-dipole-long+short.ps
	dipole-dipole-long.energy.ps
	dipole-dipole-long.ps

	* version 0.41

2005-07-30  NISHIMATSU Takeshi  <t-nissie@imr.edu>

	* src/dipole-dipole.F (dipole_dipole)
	* src/dipole-dipole-long-range.F (dipole_dipole_long_range)
	* src/dipole-dipole-short-range.F (dipole_dipole_short_range)

	* version 0.40

2005-07-29  NISHIMATSU Takeshi  <t-nissie@imr.edu>

	* src/param.F (read_Param):
	Lz_periodic -> Lz
	Lz -> film_thickness

	* version 0.39

2005-07-28  NISHIMATSU Takeshi  <t-nissie@imr.edu>

	* doc/figs/dddispersion/dddispersion.gp (y_label): 
	energy.ps

	* src/short-range.F (short_range): 
	ref_1: W. Zhong, David Vanderbilt and K. M. Rabe: PRB Vol.52 p.6301 (1995)
	(e) in TABLE 1 of ref_1 is incorrect.
	Write message to stdout.

	* src/bulk-32x32x32-test.in: P_kappa2, j(1..7)

	* version 0.38

2005-07-25  NISHIMATSU Takeshi  <t-nissie@imr.edu>

	* doc/theories/dipole-dipole.tex: fix.

	* version 0.36

2005-06-16  NISHIMATSU Takeshi  <t-nissie@imr.edu>

	* src/Makefile: Add dipole-dipole.o and decayfunctions.o.

	* src/potentials.F: Rename src/initialize_potentials.F -> src/potentials.F

	* version 0.30

2005-05-08  NISHIMATSU Takeshi  <t-nissie@imr.tohoku.ac.jp>

	* src/crosssection.gp: blue arrows for negative z polarization.

	* src/Makefile: LIBS=-lPEPCF90 /usr/lib/gcc-lib/i386-pc-linux/2.95.3/libgcc.a
	for ifc version 7.1 and fftw-3.0.1 compiles with g77

	* version 0.28

2005-05-01  NISHIMATSU Takeshi  <t-nissie@imr.edu>

	* src/param.F (Param_module): delete real*8 lambda, constant for Ewald sum

	* src/initialize_potential.F (initialize_potential): add Z^2
	-  c%dipoP(:,:,:,:,:) = c%dipoP(:,:,:,:,:) * 4 * M_PI                ! Do NOT multiply N.
	+  c%dipoP(:,:,:,:,:) = c%dipoP(:,:,:,:,:) * 4 * M_PI * p%Z_star**2 / p%epsilon_inf
	+                                                                    ! Do NOT multiply N.

2005-04-29  NISHIMATSU Takeshi  <t-nissie@imr.edu>

	* src/initialize_potential.F (initialize_potential): 
	-  c%dipoP(:,:,:,:,:) = c%dipoP(:,:,:,:,:) * p%N * 4 * M_PI
	+  c%dipoP(:,:,:,:,:) = c%dipoP(:,:,:,:,:)       * 4 * M_PI   ! Do NOT multiply N.

2005-04-28  NISHIMATSU Takeshi  <t-nissie@imr.edu>

	* src/fft.F (fft): add direction fft(p,r,c,direction)

	* src/define.h: add FFT direction (FFTW compatible)

	* version 0.26

2005-04-27  NISHIMATSU Takeshi  <t-nissie@imr.edu>

	* src/initialize_potential.F: dipole-dipole long range interaction

	* version 0.25

2005-03-18  NISHIMATSU Takeshi  <t-nissie@imr.edu>

	* src/Makefile (feram): Add initialize_potential.o

	* src/initialize_potential.F (initialize_potential): Add a little.

	* version 0.23

2005-03-15  NISHIMATSU Takeshi  <t-nissie@imr.edu>

	* src/fft.F (fft): c(0:p%Lx/2, 0:p%Ly-1, 0:p%Lz_periodic-1, 3)
	for dfftw_plan_dft_r2c_3d(). Read the info of FFTW, section of
	"Multi-Dimensional DFTs of Real Data"

	* version 0.22

2005-03-08  NISHIMATSU Takeshi  <t-nissie@imr.edu>

	* src/fft.F (fft): Using FFTW

	* version 0.20

	* src/Makefile: Compiler-dependent valiables

	* version 0.19

2005-03-07  NISHIMATSU Takeshi  <t-nissie@imr.tohoku.ac.jp>

	* src/coord.F (Coord_module): rename from src/arrays.F

	* version 0.18

2005-03-05  NISHIMATSU Takeshi  <t-nissie@imr.tohoku.ac.jp>

	* src/energies.f (kinetic_energy): 

	* version 0.17

	* src/leapfrog.f (leapfrog): Where shall we mirror() them?

	* version 0.16

2005-03-04  NISHIMATSU Takeshi  <t-nissie@imr.tohoku.ac.jp>

	* src/moleculardynamics.F (moleculardynamics): 
	call update()
	call write_system()

	* version 0.15

2005-03-03  NISHIMATSU Takeshi  <t-nissie@imr.tohoku.ac.jp>

	* src/mirror.f (mirror): Made an independent file.

	* version 0.14

2005-03-01  NISHIMATSU Takeshi  <t-nissie@imr.tohoku.ac.jp>

	* src/arrays.F (initialize_DoF): 
	a%uR(ix,iy,iz,i) = normal_dist(p%init_u_avg(i),p%init_u_dev(i))

	* version 0.13

2005-02-26  NISHIMATSU Takeshi  <t-nissie@imr.tohoku.ac.jp>

	* src/uR2uK.F (uR2uK): 

	* version 0.12

2005-02-25  NISHIMATSU Takeshi  <t-nissie@imr.tohoku.ac.jp>

	* src/param.F (Param_module): 
	real*8 init_u_avg(3) ! Average   of initial u vectors
	real*8 init_u_dev(3) ! Deviation of initial u vectors

	* version 0.10

2005-02-24  NISHIMATSU Takeshi  <t-nissie@imr.tohoku.ac.jp>

	* src/param.F (make_Param): 
	p%Lz_periodic = ( p%Lz + p%gap_width ) * 2

	* src/Makefile (LIBS): for drand(0)
	ifc: -lPEPCF90,  Tru64: -l???,  g95: -l???

2005-02-23  NISHIMATSU Takeshi  <t-nissie@imr.tohoku.ac.jp>

	* src/arrays.F (mirror_uR_and_acoustic):
	Rename from subroutine mirror_uR.

	* version 0.08

2005-02-22  NISHIMATSU Takeshi  <t-nissie@imr.tohoku.ac.jp>

	* src/moleculardynamics.F:

	* version 0.06

2005-02-21  NISHIMATSU Takeshi  <t-nissie@imr.tohoku.ac.jp>

	* src/param.F (Param_module): real*8 kelvin(MAX_N_KELVIN)

	* src/define.h (MAX_N_KELVIN): new definition.

2005-02-18  NISHIMATSU Takeshi  <t-nissie@imr.tohoku.ac.jp>

	* src/param.F (Param_module): mass_dipole, mass_nose.

	* version 0.06
